{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","Link","to","date","venue","resultMargin","result","playerofmatch","umpire1","umpire2","MatchSmallCard","TeamPage","initialState","useState","matches","team","setTeam","useParams","useEffect","fetchMatches","a","fetch","process","response","json","data","console","log","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81330a49.chunk.js","sourcesContent":["import {React} from 'react';\r\nimport Link from \"react-router-dom/es/Link\";\r\nimport \"./MatchDetailCard.scss\";\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\r\n            </div>\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerofmatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1},{match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { React } from 'react';\r\nimport Link from \"react-router-dom/es/Link\";\r\nimport \"./MatchSmallCard.scss\"\r\n\r\nexport const MatchSmallCard = ({match, teamName}) => {\r\n    if(!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className= {isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import {React, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport {MatchSmallCard} from \"../components/MatchSmallCard\";\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './TeamPage.scss';\r\n\r\n\r\nexport const TeamPage = initialState => {\r\n\r\n    const [team, setTeam] = useState({matches: []});\r\n    const {teamName} = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName]\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not Found</h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\">\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                Wins/Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key = {match.id} teamName={team.teamName} match={match}/>)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './YearSelector.scss'\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for(let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {years.map(year =>\r\n                (\r\n                    <li key={year}>\r\n                        <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                    </li>\r\n                )) }\r\n        </ol>\r\n    )\r\n}\r\n","import { React, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {MatchDetailCard} from \"../components/MatchDetailCard\";\r\nimport './MatchPage.scss'\r\nimport {YearSelector} from \"../components/YearSelector\";\r\n\r\n\r\n\r\nexport const MatchPage = initialState => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName,year} =  useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                //console.log(data);\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-selector\">\r\n                <h3> Select Year </h3>\r\n                <YearSelector teamName={teamName}/>\r\n            </div>\r\n\r\n            <div><h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n            {\r\n                matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match = {match}/>)\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {React} from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to = {`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n","import {React, useEffect, useState} from 'react';\r\nimport './HomePage.scss';\r\nimport {TeamTile} from \"../components/TeamTile\";\r\n\r\n\r\nexport const HomePage = initialState => {\r\n\r\n    const [teams, setTeam] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams= async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\">\r\n                <h1 className=\"app-name\">IPL DashBoard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import {React} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport {TeamPage} from \"./pages/TeamPage\";\nimport {MatchPage} from \"./pages/MatchPage\";\nimport {HomePage} from \"./pages/HomePage\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Switch>\n                    <Route path = \"/teams/:teamName/matches/:year\">\n                        <MatchPage/>\n                    </Route>\n                <Route path = \"/teams/:teamName\">\n                    <TeamPage/>\n                </Route>\n                    <Route path=\"/\">\n                        <HomePage />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}